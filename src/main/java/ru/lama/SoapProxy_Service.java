
package ru.lama;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "soap-proxy", targetNamespace = "http://www.lama.ru/test/", wsdlLocation = "classpath:wsdl/soap-proxy.wsdl")
public class SoapProxy_Service
    extends Service
{

    private final static URL SOAPPROXY_WSDL_LOCATION;
    private final static WebServiceException SOAPPROXY_EXCEPTION;
    private final static QName SOAPPROXY_QNAME = new QName("http://www.lama.ru/test/", "soap-proxy");

    static {
        SOAPPROXY_WSDL_LOCATION = ru.lama.SoapProxy_Service.class.getResource("classpath:wsdl/soap-proxy.wsdl");
        WebServiceException e = null;
        if (SOAPPROXY_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'classpath:wsdl/soap-proxy.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        SOAPPROXY_EXCEPTION = e;
    }

    public SoapProxy_Service() {
        super(__getWsdlLocation(), SOAPPROXY_QNAME);
    }

    public SoapProxy_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), SOAPPROXY_QNAME, features);
    }

    public SoapProxy_Service(URL wsdlLocation) {
        super(wsdlLocation, SOAPPROXY_QNAME);
    }

    public SoapProxy_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SOAPPROXY_QNAME, features);
    }

    public SoapProxy_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SoapProxy_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SoapProxy
     */
    @WebEndpoint(name = "soap-proxySOAP")
    public SoapProxy getSoapProxySOAP() {
        return super.getPort(new QName("http://www.lama.ru/test/", "soap-proxySOAP"), SoapProxy.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SoapProxy
     */
    @WebEndpoint(name = "soap-proxySOAP")
    public SoapProxy getSoapProxySOAP(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.lama.ru/test/", "soap-proxySOAP"), SoapProxy.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SOAPPROXY_EXCEPTION!= null) {
            throw SOAPPROXY_EXCEPTION;
        }
        return SOAPPROXY_WSDL_LOCATION;
    }

}
